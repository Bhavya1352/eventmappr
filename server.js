const express=require("express"),https=require("https"),http=require("http"),fs=require("fs"),path=require("path"),app=express(),PORT=process.env.PORT||3e3;app.use(express.static(path.join(__dirname,"dist"))),app.get("*",(t,e)=>{e.sendFile(path.join(__dirname,"dist","index.html"))});const certPath=path.join(__dirname,"certs","cert.pem"),keyPath=path.join(__dirname,"certs","key.pem"),useHttps=fs.existsSync(certPath)&&fs.existsSync(keyPath);if(useHttps){let t={key:fs.readFileSync(keyPath),cert:fs.readFileSync(certPath)};https.createServer(t,app).listen(PORT,()=>{console.log(`üîí HTTPS Server running on https://localhost:${PORT}`)})}else http.createServer(app).listen(PORT,()=>{console.log(`üåê HTTP Server running on http://localhost:${PORT}`)});console.log("For Safari compatibility, use HTTPS by generating certificates:"),console.log("mkdir -p ./certs && openssl req -x509 -newkey rsa:4096 -keyout ./certs/key.pem -out ./certs/cert.pem -days 365 -nodes -subj '/CN=localhost' -addext \"subjectAltName=DNS:localhost,DNS:*.localhost,IP:127.0.0.1\""),console.log("npm run start:https");
