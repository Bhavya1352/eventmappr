import e,{useState as t,useEffect as a}from"react";import r from"next/head";import i from"next/dynamic";import{initializeFirebase as n}from"../utils/firebase";import{getAuth as o,onAuthStateChanged as l}from"firebase/auth";let MapExplorer=i(()=>import("../components/map/MapExplorer"),{ssr:!1,loading:()=><div className="map-loading">Loading map...</div>});export default function m(){let[e,r]=t(null),[i,m]=t([]),[s,d]=t(!0);a(()=>{let e=()=>{let e=document.querySelectorAll(".map-header, .map-container, .categories-list");e.forEach(e=>{let t=e.getBoundingClientRect().top,a=window.innerHeight/1.3;t<a&&e.classList.add("animate")})};return window.addEventListener("scroll",e),e(),()=>{window.removeEventListener("scroll",e)}},[]),a(()=>{let e=n();if(e)try{let t=o(e),a=l(t,e=>{r(e),d(!1)});return()=>a()}catch(i){console.error("Error setting up auth:",i),d(!1)}else console.log("Running without Firebase authentication"),d(!1)},[]),a(()=>{if("undefined"!=typeof window){let e=localStorage.getItem("eventmappr-events");if(e)try{m(JSON.parse(e))}catch(t){console.error("Error loading events:",t)}}},[]);let c=e=>{let t=[...i,e];m(t),"undefined"!=typeof window&&localStorage.setItem("eventmappr-events",JSON.stringify(t))},$=e=>{let t=i.filter(t=>t.id!==e);m(t),"undefined"!=typeof window&&localStorage.setItem("eventmappr-events",JSON.stringify(t))};return<>

      <r >

        <title >Interactive Map | EventMappr</title>

        <meta name="description"content="Explore local events happening around you on an interactive map."/>

      </r>

      

      <div className="map-page">

        <div className="map-header">

          <div className="container">

            <h1 >Event Map</h1>

            <p >Discover and explore events happening in your community</p>

          </div>

        </div>

        

        <div className="map-container">

          {!s&&<MapExplorer events={i}onEventAdded={c}onEventDeleted={$}isAuthenticated={!!e}/>}

        </div>

      </div>

      

      <style jsx>{`
        .map-page {
          display: flex;
          flex-direction: column;
          min-height: 100vh;
          position: relative;
          z-index: 0;
          padding-top: 60px; /* Add padding for navbar height */
        }
        
        .map-header {
          padding: 2rem 0;
          background: linear-gradient(135deg, var(--primary-light), var(--primary));
          text-align: center;
          color: white;
          opacity: 0;
          transform: translateY(20px);
          transition: all 0.6s ease;
          position: relative;
          z-index: 2;
        }
        
        .map-header.animate {
          opacity: 1;
          transform: translateY(0);
        }
        
        .map-header h1 {
          font-size: 2.5rem;
          margin-bottom: 0.5rem;
        }
        
        .map-header p {
          font-size: 1.2rem;
          max-width: 600px;
          margin: 0 auto;
          opacity: 0.9;
        }
        
        .categories-container {
          position: sticky;
          top: 60px;
          background: rgba(255, 255, 255, 0.95);
          backdrop-filter: blur(10px);
          -webkit-backdrop-filter: blur(10px);
          padding: 0.5rem 0;
          z-index: 1;
        }

        .categories-list {
          display: flex;
          gap: 1rem;
          padding: 1rem;
          flex-wrap: wrap;
          justify-content: center;
          opacity: 0;
          transform: translateY(20px);
          transition: all 0.6s ease;
          max-width: 1200px;
          margin: 0 auto;
        }

        .categories-list.animate {
          opacity: 1;
          transform: translateY(0);
        }

        .category-item {
          padding: 0.5rem 1rem;
          border-radius: 20px;
          background: var(--slate);
          color: white;
          font-weight: 500;
          cursor: pointer;
          transition: all 0.3s ease;
          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .category-item:hover {
          background: var(--midnight-blue);
          transform: translateY(-2px);
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

        .map-container {
          flex: 1;
          width: 100%;
          height: calc(100vh - 120px);
          min-height: 500px;
          position: relative;
          opacity: 0;
          transform: translateY(20px);
          transition: all 0.6s ease;
          z-index: 0;
          margin-top: 1rem;
        }
        
        .map-container.animate {
          opacity: 1;
          transform: translateY(0);
        }
        
        .map-loading {
          display: flex;
          align-items: center;
          justify-content: center;
          height: 100%;
          font-size: 1.2rem;
          color: var(--text-light);
        }

        @media (max-width: 768px) {
          .map-header {
            padding: 1.5rem 0;
          }
          
          .map-header h1 {
            font-size: 2rem;
          }
          
          .map-container {
            height: calc(100vh - 150px);
          }
          
          .categories-list {
            padding: 0.5rem;
          }
        }
      `}</style>

    </>};